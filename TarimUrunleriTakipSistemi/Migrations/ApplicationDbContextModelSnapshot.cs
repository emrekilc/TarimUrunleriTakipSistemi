// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TarimUrunleruTakipSistemi.Data;

#nullable disable

namespace TarimUrunleriTakipSistemi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Araclar", b =>
                {
                    b.Property<int>("AracID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AracID"));

                    b.Property<decimal>("Kapasite")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AracID");

                    b.ToTable("Araclar");
                });

            modelBuilder.Entity("AraziTurleri", b =>
                {
                    b.Property<int>("AraziTuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AraziTuruID"));

                    b.Property<string>("Turu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AraziTuruID");

                    b.ToTable("AraziTurleri");
                });

            modelBuilder.Entity("Birimler", b =>
                {
                    b.Property<int>("BirimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BirimID"));

                    b.Property<string>("Birim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BirimID");

                    b.ToTable("Birimler");
                });

            modelBuilder.Entity("Ciftlikler", b =>
                {
                    b.Property<int>("CiftlikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CiftlikID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresID")
                        .HasColumnType("int");

                    b.Property<int>("AraziTuruID")
                        .HasColumnType("int");

                    b.Property<decimal>("Buyukluk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SahipID")
                        .HasColumnType("int");

                    b.HasKey("CiftlikID");

                    b.HasIndex("AdresID");

                    b.HasIndex("AraziTuruID");

                    b.HasIndex("SahipID");

                    b.ToTable("Ciftlikler");
                });

            modelBuilder.Entity("Hasatlar", b =>
                {
                    b.Property<int>("HasatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HasatID"));

                    b.Property<int>("BirimID")
                        .HasColumnType("int");

                    b.Property<int>("CiftlikID")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("HasatID");

                    b.HasIndex("BirimID");

                    b.HasIndex("CiftlikID");

                    b.HasIndex("UrunID");

                    b.ToTable("Hasatlar");
                });

            modelBuilder.Entity("Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Sebze",
                            OlusturmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Meyve",
                            OlusturmaTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolID")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KullaniciID");

                    b.HasIndex("RolID");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("Lojistik", b =>
                {
                    b.Property<int>("LojistikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LojistikID"));

                    b.Property<int>("AracID")
                        .HasColumnType("int");

                    b.Property<int>("DurumID")
                        .HasColumnType("int");

                    b.Property<int>("SatisID")
                        .HasColumnType("int");

                    b.Property<int>("SoforID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TahiminiTeslimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("LojistikID");

                    b.HasIndex("AracID");

                    b.HasIndex("DurumID");

                    b.HasIndex("SatisID");

                    b.HasIndex("SoforID");

                    b.ToTable("Lojistik");
                });

            modelBuilder.Entity("LojistikDurumlari", b =>
                {
                    b.Property<int>("DurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DurumID"));

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DurumID");

                    b.ToTable("LojistikDurumlari");
                });

            modelBuilder.Entity("Musteriler", b =>
                {
                    b.Property<int>("MusteriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusteriID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresID")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MusteriID");

                    b.HasIndex("AdresID");

                    b.ToTable("Musteriler");
                });

            modelBuilder.Entity("Roller", b =>
                {
                    b.Property<int>("RolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolID"));

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolID");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("Sahipler", b =>
                {
                    b.Property<int>("SahipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SahipID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresID")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SahipID");

                    b.HasIndex("AdresID");

                    b.ToTable("Sahipler");
                });

            modelBuilder.Entity("Satislar", b =>
                {
                    b.Property<int>("SatisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SatisID"));

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("SatisID");

                    b.HasIndex("SiparisID");

                    b.ToTable("Satislar");
                });

            modelBuilder.Entity("Siparisler", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisID"));

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("MusteriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TeslimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.HasKey("SiparisID");

                    b.HasIndex("MusteriID");

                    b.HasIndex("UrunID");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("Soforler", b =>
                {
                    b.Property<int>("SoforID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoforID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdresID")
                        .HasColumnType("int");

                    b.Property<string>("EhliyetSinifi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoforID");

                    b.HasIndex("AdresID");

                    b.ToTable("Soforler");
                });

            modelBuilder.Entity("TarimUrunleruTakipSistemi.Models.Adresler", b =>
                {
                    b.Property<int>("AdresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdresID"));

                    b.Property<int>("BinaNo")
                        .HasColumnType("int");

                    b.Property<int>("DaireNo")
                        .HasColumnType("int");

                    b.Property<string>("Eyalet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mahalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sokak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdresID");

                    b.ToTable("Adresler");
                });

            modelBuilder.Entity("Urunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BirimFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BirimID")
                        .HasColumnType("int");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("StokMiktari")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BirimID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urunler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Elma",
                            BirimFiyati = 10m,
                            BirimID = 0,
                            KategoriID = 2,
                            StokMiktari = 100
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Domates",
                            BirimFiyati = 8m,
                            BirimID = 0,
                            KategoriID = 1,
                            StokMiktari = 200
                        });
                });

            modelBuilder.Entity("Ciftlikler", b =>
                {
                    b.HasOne("TarimUrunleruTakipSistemi.Models.Adresler", "Adres")
                        .WithMany("Ciftlikler")
                        .HasForeignKey("AdresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AraziTurleri", "AraziTuru")
                        .WithMany("Ciftlikler")
                        .HasForeignKey("AraziTuruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sahipler", "Sahip")
                        .WithMany("Ciftlikler")
                        .HasForeignKey("SahipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");

                    b.Navigation("AraziTuru");

                    b.Navigation("Sahip");
                });

            modelBuilder.Entity("Hasatlar", b =>
                {
                    b.HasOne("Birimler", "Birim")
                        .WithMany("Hasatlar")
                        .HasForeignKey("BirimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ciftlikler", "Ciftlik")
                        .WithMany("Hasatlar")
                        .HasForeignKey("CiftlikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Urunler", "Urun")
                        .WithMany("Hasatlar")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Ciftlik");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Kullanicilar", b =>
                {
                    b.HasOne("Roller", "Rol")
                        .WithMany("Kullanicilar")
                        .HasForeignKey("RolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Lojistik", b =>
                {
                    b.HasOne("Araclar", "Arac")
                        .WithMany("Lojistik")
                        .HasForeignKey("AracID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojistikDurumlari", "Durum")
                        .WithMany("Lojistik")
                        .HasForeignKey("DurumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Satislar", "Satis")
                        .WithMany()
                        .HasForeignKey("SatisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Soforler", "Sofor")
                        .WithMany()
                        .HasForeignKey("SoforID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("Durum");

                    b.Navigation("Satis");

                    b.Navigation("Sofor");
                });

            modelBuilder.Entity("Musteriler", b =>
                {
                    b.HasOne("TarimUrunleruTakipSistemi.Models.Adresler", "Adres")
                        .WithMany("Musteriler")
                        .HasForeignKey("AdresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Sahipler", b =>
                {
                    b.HasOne("TarimUrunleruTakipSistemi.Models.Adresler", "Adres")
                        .WithMany("Sahipler")
                        .HasForeignKey("AdresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Satislar", b =>
                {
                    b.HasOne("Siparisler", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("Siparisler", b =>
                {
                    b.HasOne("Musteriler", "Musteri")
                        .WithMany("Siparisler")
                        .HasForeignKey("MusteriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Urunler", "Urun")
                        .WithMany("Siparisler")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Soforler", b =>
                {
                    b.HasOne("TarimUrunleruTakipSistemi.Models.Adresler", "Adres")
                        .WithMany("Soforler")
                        .HasForeignKey("AdresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Urunler", b =>
                {
                    b.HasOne("Birimler", "Birim")
                        .WithMany("Urunler")
                        .HasForeignKey("BirimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kategori", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Araclar", b =>
                {
                    b.Navigation("Lojistik");
                });

            modelBuilder.Entity("AraziTurleri", b =>
                {
                    b.Navigation("Ciftlikler");
                });

            modelBuilder.Entity("Birimler", b =>
                {
                    b.Navigation("Hasatlar");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("Ciftlikler", b =>
                {
                    b.Navigation("Hasatlar");
                });

            modelBuilder.Entity("Kategori", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("LojistikDurumlari", b =>
                {
                    b.Navigation("Lojistik");
                });

            modelBuilder.Entity("Musteriler", b =>
                {
                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("Roller", b =>
                {
                    b.Navigation("Kullanicilar");
                });

            modelBuilder.Entity("Sahipler", b =>
                {
                    b.Navigation("Ciftlikler");
                });

            modelBuilder.Entity("TarimUrunleruTakipSistemi.Models.Adresler", b =>
                {
                    b.Navigation("Ciftlikler");

                    b.Navigation("Musteriler");

                    b.Navigation("Sahipler");

                    b.Navigation("Soforler");
                });

            modelBuilder.Entity("Urunler", b =>
                {
                    b.Navigation("Hasatlar");

                    b.Navigation("Siparisler");
                });
#pragma warning restore 612, 618
        }
    }
}
